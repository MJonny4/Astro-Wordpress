---
import BlockRendererInner from './BlockRenderer.astro';
import Navigation from './Navigation.astro';
import NavigationLink from './NavigationLink.astro';
import NavigationSubmenu from './NavigationSubmenu.astro';
import Cover from './Cover.astro';
import Heading from './Heading.astro';
import Button from './Button.astro';
import { getBlockStyling } from '@wp-block-tools/styles';
import type { Block } from '@wp-block-tools/styles';
import { Image } from 'astro:assets';

type Props = {
    blocks: Block[];
};
const { blocks } = Astro.props;
---

{
    blocks.map((block) => {
        const { styles, classes } = getBlockStyling(block);

        switch (block.name) {
            case "core/button":
                return <Button 
                    classes={classes}
                    styles={styles}
                    url={block.attributes?.url || ''}
                    content={block.attributes?.content || ''}
                />;

            case 'core/heading':
                return (
                    <Heading
                        classes={classes}
                        styles={styles}
                        level={block.attributes?.level || 2}
                        content={block.attributes?.content || ''}
                    />
                );

            case 'core/cover':
                return (
                    <Cover
                        classes={classes}
                        styles={styles}
                        url={block.attributes?.url}
                        height={block.attributes?.height}
                        width={block.attributes?.width}
                    >
                        <BlockRendererInner blocks={block.innerBlocks || []} />
                    </Cover>
                );

            case 'core/navigation-submenu':
                return (
                    <NavigationSubmenu
                        classes={classes}
                        styles={styles}
                        label={block.attributes?.label || ''}
                        url={block.attributes?.url || ''}
                    >
                        <BlockRendererInner blocks={block.innerBlocks || []} />
                    </NavigationSubmenu>
                );

            case 'core/navigation-link':
                return (
                    <NavigationLink
                        classes={classes}
                        styles={styles}
                        label={block.attributes?.label || ''}
                        url={block.attributes?.url || ''}
                    />
                );
            case 'core/navigation':
                return (
                    <Navigation classes={classes} styles={styles}>
                        <BlockRendererInner blocks={block.innerBlocks || []} />
                    </Navigation>
                );
            case 'core/paragraph':
                return (
                    <p
                        class={classes}
                        style={styles}
                        set:html={block.attributes?.content}
                    />
                );
            case 'core/columns':
            case 'core/column':
            case 'core/post-content':
            case 'core/group':
            case 'core/buttons':
            case 'core/social-links':
                return (
                    <div class={classes} style={styles}>
                        <BlockRendererInner blocks={block.innerBlocks || []} />
                    </div>
                );
            case 'core/site-logo':
                return (
                    <div class={classes} style={styles}>
                        <Image
                            height={block.attributes?.width}
                            width={block.attributes?.width}
                            src={block.attributes?.url || ''}
                            alt="Site logo"
                            widths={[50, 75, 100]}
                        />
                    </div>
                );
            case 'core/template-part':
                return <BlockRendererInner blocks={block.innerBlocks || []} />;
            default:
                return null;
        }
    })
}
